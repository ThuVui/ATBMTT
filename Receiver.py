# receiver.py - Nh·∫≠n file m√£ h√≥a v√† gi·∫£i m√£ v·ªõi giao di·ªán ƒë·∫πp h∆°n
import socket
import rsa
import tkinter as tk
from tkinter import messagebox, filedialog
import threading
from tkinter import ttk

HOST = '0.0.0.0'
PORT = 65432

class ReceiverApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Ng∆∞·ªùi Nh·∫≠n - RSA File Receiver")
        self.root.geometry("500x300")
        self.root.configure(bg="#f0f4f8")

        self.style = ttk.Style()
        self.style.configure("TButton", font=("Segoe UI", 10), padding=6)
        self.style.configure("TLabel", font=("Segoe UI", 11), background="#f0f4f8")

        ttk.Label(root, text="üõ°Ô∏è Tr√¨nh Nh·∫≠n File B·∫£o M·∫≠t").pack(pady=10)
        ttk.Button(root, text="üîê T·∫°o kh√≥a nh·∫≠n", command=self.generate_keys).pack(pady=5)

        self.status_label = ttk.Label(root, text="ƒêang ch·ªù file g·ª≠i ƒë·∫øn...", foreground="green")
        self.status_label.pack(pady=10)

        self.save_button = ttk.Button(root, text="üíæ L∆∞u file gi·∫£i m√£", command=self.save_file)
        self.save_button.pack(pady=5)
        self.save_button['state'] = 'disabled'

        self.decrypted_data = None

        threading.Thread(target=self.listen_for_file, daemon=True).start()

    def generate_keys(self):
        pubkey, privkey = rsa.newkeys(2048)
        with open("receiver_public.pem", "wb") as pub_file:
            pub_file.write(pubkey.save_pkcs1())
        with open("receiver_private.pem", "wb") as priv_file:
            priv_file.write(privkey.save_pkcs1())
        messagebox.showinfo("Kh√≥a RSA", "ƒê√£ t·∫°o receiver_public.pem v√† receiver_private.pem")

    def listen_for_file(self):
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.bind((HOST, PORT))
            s.listen()
            while True:
                conn, addr = s.accept()
                with conn:
                    encrypted_data = conn.recv(65536)
                    self.status_label.config(text=f"üì• ƒê√£ nh·∫≠n file t·ª´ {addr[0]}")
                    self.decrypt_file(encrypted_data)

    def decrypt_file(self, encrypted_data):
        try:
            with open("receiver_private.pem", "rb") as priv_file:
                privkey = rsa.PrivateKey.load_pkcs1(priv_file.read())
            self.decrypted_data = rsa.decrypt(encrypted_data, privkey)
            self.save_button['state'] = 'normal'
            messagebox.showinfo("Th√†nh c√¥ng", "ƒê√£ gi·∫£i m√£ file, vui l√≤ng ch·ªçn n∆°i l∆∞u.")
        except Exception as e:
            messagebox.showerror("L·ªói gi·∫£i m√£", f"{str(e)}")

    def save_file(self):
        if self.decrypted_data:
            file_path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text Files", "*.txt")])
            if file_path:
                with open(file_path, 'wb') as f:
                    f.write(self.decrypted_data)
                messagebox.showinfo("ƒê√£ l∆∞u", f"File ƒë√£ l∆∞u t·∫°i: {file_path}")

if __name__ == "__main__":
    root = tk.Tk()
    app = ReceiverApp(root)
    root.mainloop()
